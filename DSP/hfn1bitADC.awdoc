AW{"type":"mjmd"}

# Simple 1-bit ADC

Most 1-bit ADCs use a delta-sigma conversion technique. This page presents a different approach where high frequency noise is used to dither the measured signal. The amplitude of the noise source must be sufficiently high to cross the threshold of a comparator (or 1-bit ADC).

## Summary of Operation

AW{"type":"diagram"}
    var x1=100;
    var x2=250;
    var x3=320;
    var x4=350;
    var x5=460;
    var y1=40;
    var y2=120;
    
    var yc=(y1+y2)/2;
    var p_ng = new Point(x1,y1);
    var p_hpf = new Point(x2,y1);
    var p_ss = new Point((x1+x2)/2,y2);
    var p_ngb = new Point(x3,y1);
    var p_ssb = new Point(x3,y2);
    var p_adder = new Point(x4,yc);
    var p_th = new Point(x5,yc);
    var p_out = new Point(2*x5-x4,yc);

    var ng = new Delay(p_ng,150,30,"PRBS generator");
    var hpf = new Delay(p_hpf,80,30,"HPF");
    var ss = new Delay(p_ss,150,30,"LF signal");
    var adder= new Adder(p_adder,20);
    var th = new Delay(p_th,100,30,"Threshold");

    fig.draw(ng);
    fig.draw(hpf);
    fig.draw(ss);
    fig.draw(adder);
    fig.draw(th);
    fig.drawPolyLine([ng.getConnection(p_hpf), hpf.getConnection(p_ng)],'-->');
    fig.drawPolyLine([hpf.getConnection(p_ngb), p_ngb, adder.getConnection(p_ngb)],'-->');
    fig.drawPolyLine([ss.getConnection(p_ssb), p_ssb, adder.getConnection(p_ssb)],'-->');
    fig.drawPolyLine([adder.getConnection(p_out), th.getConnection(p_adder)],'-->');
    fig.drawPolyLine([th.getConnection(p_out), p_out],'-->');

AW{"type":"mjmd"}

### PRBS Generator

The Pseudorandom Binary Sequence (PRBS) generator could consist of a simple algorithm implemented on a microcontroller. A CRC generator will be suitable for this purpose or the integer multiply and add technique can also be used. 
### Highpass Filter

The highpass filter ensures that PRBS noise in the comparatively low frequency band of the measured signal is suitably attenuated.

### Threshold

The Threshold (which may be just the binary input of a microcontroller) converts the output of the adder into a binary sequence.

### Aliasing

As the PRBS is not passed through any anti-aliasing filter, it is important that the clock of the PRBS generator and the 1-bit sampler are exactly the same. If they differ slightly, aliasing will be present in the band of the measured signal. In practice, this can be readily achieved using the SPI or $\mathrm{I^2S}$ interface of a microcontroller.

## Modelling

### GNU/Octave model

A GNU/Octave model for the HF noise dithered 1-bit ADC can be found [here](https://github.com/andrew-rogers/DSP/blob/master/octave/prbs1bit.m).
